create profile with 1:1 relationship with user .OneToOneField(user)



Order:
-buyer = profile.ForeignKey()     
-request = models.Charfield()
-date_created = models.GETTIME OR SOMETHING()
-graphic_type   (icon/poster/logo)
-poster_size 
-deadline

Profile:
-user.OneToOneField()
-role.ForeignKey(role) (designer/buyer)

Role:
-role (designer/buyer/admin)

Quotes:
-order.OneToOneField()
-price
-status (pending/accepted/rejected)
-designer = profile.ForeignKey
-delivered = boolean


CompletedWorks:
-designer = profile.ForeignKey()
-price =
-mediaURL =
-review
-buyer = profile.ForeignKey

https://docs.djangoproject.com/en/2.2/ref/models/fields/ !!!!!


 # class Quotes(models.Model):
    #     # order = models.OneToOneField('Requestmodel', on_delete=models.CASCADE)
    #     price= models.DecimalField(max_digits=10, decimal_places=2)
    #     status = models.CharField(
    #         choices= [
    #         ('Pending', 'Pending'),
    #         ('Accepted', 'Accepted'),
    #         ('Rejected', 'Rejected'),
    #         ],
    #         default='Pending',
    #         max_length=8,
    #     )
    #     # designer = models.ForeignKey('Profile', on_delete=models.CASCADE)
    #     delivered = models.BooleanField()
    
    
    buyer = models.ForeignKey(UserProfile, on_delete=models.CASCADE)
    price = models.DecimalField(max_digits=8, decimal_places=2, null=True, blank=True,)
    request = models.TextField(null=True, blank=True,)
    graphic_type = models.CharField(
        choices= [
        ('Poster', 'poster'),
        ('Icon', 'icon'),
        ('Logo', 'logo'),
        ('Different', 'different'),
        ],
        null=True, 
        blank=True,
        max_length=9,
    )
    deadline = models.DateTimeField(auto_now=False, null=True, blank=True,)
    date_requested = models.DateTimeField(auto_now=False, null=True, blank=True,)
    wireframe = models.ImageField(blank=True)
    
    def __str__(self):
        return self.title
        
    def snippet(self):
        return self.request[:50] + '...'
        